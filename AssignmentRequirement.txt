
use Javascript + npm



Core criteria (20 marks)
These are the core tasks of the assessment that you must attempt, and are also required to support core criteria in later assessment items. They are worth up to 20 out of 30 marks. You should prioritise these over the additional criteria below. There are six core criteria that are weighted at 3 marks each, and one that is weighted at two marks -- totalling 20 marks.

More details on how to achieve these criteria are given in the marking rubric. Be sure you are completing the tasks in such a way that the marking rubric is satisfied.

CPU intensive task (3 marks)
Your application uses at least one CPU intensive process that can be triggered by 
requests to load down the server. In later assessment, you will need to load down 
more servers so here, try to exceed 80% CPU usage for an extended time (5 minutes is enough).

CPU load testing (2 marks)
You demonstrate a script or manual method for generating enough requests to load down the server to >80% CPU 
for an extended time (5 minutes is enough) with enough headroom on your network connection to load 
down an additional 3 servers.

Data types (3 marks)
Your application stores at least two different types of data, not including user login data.

Containerise the app (3 marks)
Your application has been bundled into a Docker container and stored on our AWS ECR instance.

Deploy the container (3 marks)
Your application container has been pulled from AWS ECR and deployed to an EC2 instance.

REST API (3 marks)
Your application has a REST-based application programming interface (API) 
which is considered its primary interface.

User login (3 marks)
Your application has basic user login and session management with JWT. Logins must have meaningful distinctions for different users.





Additional criteria (10 marks)
These should have lower priority than the core criteria above.
We have provided five options but you should only attempt four of these. There is also an open-ended additional that requires approval by the unit coordinator.

Attempting more than four additional tasks is allowed but you cannot 
achieve more than 10 marks from these tasks. We will mark only the four you explicitly tell us to consider. You should choose the best four, as we will not mark a fifth.

Each additional is weighted at 2.5 marks.

More details are given in the marking rubric. Be sure you are completing the tasks in such a way that the marking rubric is satisfied.

Extended API features (2.5 marks)
Your API extensively uses features of HTTP and follows REST principles. Here we would be 
looking for a solution that could be leverage by any client application (e.g., a mobile app, 
a command-line interface, automation workflows, etc.). Some features may be versioning, 
pagination, filtering and sorting.
擴充 API 功能（2.5 分）
您的 API 廣泛使用了 HTTP 的功能，並遵循 REST 原則。我們期望
能夠被任何客戶端應用程式（例如，行動應用程式、命令列介面、自動化工作流程等）
利用的解決方案。部分功能可能包括版本控制、
分頁、過濾和排序。

External APIs (2.5 marks) - 沒達到要求
Your application uses an external API for data and uses that data in a novel way. 
Implementing what would effectively be a proxy is insufficient.
外部 API（2.5 分）
你的應用程式使用外部 API 來獲取數據，並以一種新穎的方式使用這些數據。
僅僅實現一個有效的代理機制是不夠的。


Additional types of data (2.5 marks)
Your application includes types of data beyond what is required in the core task. 
Here, we are considering types of storage, formats and manipulation techniques.
其他資料型態（2.5 分）
你的申請包含核心任務所要求以外的資料類型。
我們在此考慮儲存類型、格式和操作技術。


Custom processing (2.5 marks)
Your application implements a significant amount of custom processing, 
particularly in the CPU intensive process (as opposed to using off-the-shelf implementations).
You may consider implementing your own novel method that is CPU-intensive, 
or an innovative combination of existing tools.
自訂處理（2.5 分）
您的應用程式實現了大量自訂處理，
尤其是在 CPU 密集型處理中（而不是使用現成的實作）。
您可以考慮實現您自己的 CPU 密集型新方法，
或現有工具的創新組合。


Infrastructure as code (2.5 marks)
Your application extensively uses infrastructure-as-code technologies 
such as Docker Compose, CloudFormation, or the CDK.
基礎設施即代碼（2.5 分）
您的應用程式廣泛使用了基礎架構即代碼技術，
例如 Docker Compose、CloudFormation 或 CDK。


Web client (2.5 marks)
Your application includes a client, accessible with a web browser, 
that interfaces with all endpoints of your API.

Upon request (2.5 marks)
Other functionality or aspects that demonstrate a high level of achievement in the project

This excludes things assessed in later assessment items.
Speak to a coordinator if there is something specific that you'd like to do and get additional credit for.



App function:
Videos: transcoding, generation (eg. render 3D animation)
Audio : ranscoding and noise filter